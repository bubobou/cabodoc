[{"id":0,"href":"/data-Models/baseModel/","title":"baseModel","parent":"Data Models","content":"Extends: Data \u0026lt; Node\nDescription    modèle de data access object category: Model\nConstants Descriptions    SQLite    const SQLite: NativeScript = preload(\u0026#34;res://addons/godot-sqlite/bin/gdsqlite.gdns\u0026#34;) Property Descriptions    db    var db dbName    var dbName: String jsonName    var jsonName: String Method Descriptions    cprint    func cprint(text: String) -\u0026gt; void copy_data_to_user    func copy_data_to_user() -\u0026gt; void copier les données vers le répertoire data\nconnectDb    func connectDb() connection à la base de données\ngetLastInsertedId    func getLastInsertedId(tableName) obtenir le dernier Id inserer dans une table de la base de donnée, donné en paramètre\nSignals     signal output_received(text):  "},{"id":1,"href":"/classes/","title":"Classes","parent":"Documentation Carnet-de-Bord","content":""},{"id":2,"href":"/classes/ComCFQuestionPC/","title":"ComCFQuestionPC","parent":"Classes","content":"Extends: PanelContainer\nDescription    Classe de la scène Question\nProperty Descriptions    refId    var refId domaineId    var domaineId competenceIdArray    var competenceIdArray questionText    var questionText Method Descriptions    init    func init(refId, domaineId, competenceIdArray, questionText: String = \u0026#34;\u0026#34;) initialise les paramètres utilisés dans la construction de la scène Question\n"},{"id":3,"href":"/classes/comHLeftB/","title":"comHLeftB","parent":"Classes","content":"Extends: Button\nDescription    Bouton permettant de retourner au menu principal\n"},{"id":4,"href":"/data-Models/CompetenceModel/","title":"CompetenceModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table COMPETENCE\nMethod Descriptions    getCompetenceArrayByDomainId    func getCompetenceArrayByDomainId(idDomain) récupère toutes les compétences du domaine donné en paramètre\n"},{"id":5,"href":"/classes/Data/","title":"Data","parent":"Classes","content":"Extends: Node\nDescription    mapping des noms utilisés dans le code avec les noms des tables et des champs utilisés dans la base de données\nProperty Descriptions    eleveTable    var eleveTable: String eleveId    var eleveId: String eleveNom    var eleveNom: String elevePrenom    var elevePrenom: String groupeTable    var groupeTable: String groupeId    var groupeId: String groupeNom    var groupeNom: String eleveGroupPivotTable    var eleveGroupPivotTable: String eleveGroupPivotEleveId    var eleveGroupPivotEleveId: String eleveGroupPivotGroupeId    var eleveGroupPivotGroupeId: String grilleTable    var grilleTable: String grilleId    var grilleId: String grilleName    var grilleName: String questionTable    var questionTable: String questionId    var questionId: String questionText    var questionText: String questionReferentielId    var questionReferentielId: String questionDomainId    var questionDomainId: String grilleQuestionPivotTable    var grilleQuestionPivotTable: String grilleQuestionPivotQuestionId    var grilleQuestionPivotQuestionId: String grilleQuestionPivotGrilleId    var grilleQuestionPivotGrilleId: String referentielTable    var referentielTable: String referentielId    var referentielId: String referentielCycle    var referentielCycle: String referentielNiveau    var referentielNiveau: String referentielDiscipline    var referentielDiscipline: String referentielType    var referentielType: String domaineTable    var domaineTable: String domaineId    var domaineId: String domaineNom    var domaineNom: String domainReferentielId    var domainReferentielId: String competenceTable    var competenceTable: String competenceId    var competenceId: String competenceCapacite    var competenceCapacite: String competenceContenu    var competenceContenu: String competenceType    var competenceType: String competenceDomaineId    var competenceDomaineId: String competenceEditText    var competenceEditText: String questionCompetencePivotTable    var questionCompetencePivotTable: String questionCompetencePivotQuestionId    var questionCompetencePivotQuestionId: String questionCompetencePivotCompetenceId    var questionCompetencePivotCompetenceId: String "},{"id":6,"href":"/data-models/","title":"Data Models","parent":"Documentation Carnet-de-Bord","content":""},{"id":7,"href":"/","title":"Documentation Carnet-de-Bord","parent":"","content":""},{"id":8,"href":"/data-Models/DomaineModel/","title":"DomaineModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table DOMAINE category : Model\nMethod Descriptions    getDomaineByRefId    func getDomaineByRefId(refId) récupère tous les domaines du référentiel donné en paramètre\n"},{"id":9,"href":"/Eleves/eAjoPC/","title":"eAjoPC","parent":"Eleves","content":"Extends: PanelContainer\nDescription    La classe du panneau permettant d\u0026rsquo;ajouter un élève\nProperty Descriptions    eleveModel    var eleveModel pivotEleveGroupeModel    var pivotEleveGroupeModel Method Descriptions    editPageTitle    func editPageTitle() fillEleveForm    func fillEleveForm(idEleve) fillNomEleve    func fillNomEleve(nomEleve) fillPrenomEleve    func fillPrenomEleve(prenomEleve) fillGroupesEleve    func fillGroupesEleve(groupesArray) fillGroups    func fillGroups(multiSelectParentNode, groupesArray) fillIdEleve    func fillIdEleve(idEleve) displayDeleteButton    func displayDeleteButton() "},{"id":10,"href":"/Eleves/eleCLVBC/","title":"eleCLVBC","parent":"Eleves","content":"Extends: VBoxContainer\nDescription    gère l\u0026rsquo;affichage de la liste des élèves\nProperty Descriptions    eleveModel    var eleveModel Method Descriptions    fillRawData    func fillRawData(eleveDic) fillId    func fillId(rawNode, id) fillName    func fillName(rawNode, name) fillGroupes    func fillGroupes(rawNode, groupes) "},{"id":11,"href":"/data-Models/eleveModel/","title":"eleveModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table ELEVE\nMethod Descriptions    getEleveWithGroups    func getEleveWithGroups() getEleveWithoutGroupe    func getEleveWithoutGroupe(idsHavingGroupe) sélectionner dans la table ELEVE, ceux qui ne sont pas affectés à un groupe; retourner un dictionnaire {idEleve : {Name , Groupes}}\ngetEleveThatHasGroupe    func getEleveThatHasGroupe() effectuer une requête sur la table ELEVE_GROUPE_PIVOT pour récupérer les élèves affectés à un groupe et retourner un dictionnaire contenant les groupes affectés à chaque élève via transformEleveGroups(queryResult)`.\ntransformEleve    func transformEleve(eleveArray) transformEleveGroups    func transformEleveGroups(queryResult) retourner un dictionnaire {idEleve : {Name , Groupes}} avec Name = Nom Prenom et Groupes = liste des groupes de l\u0026rsquo;élève\nsaveEleve    func saveEleve(eleveDic) insertEleve    func insertEleve(eleveDic) updateEleve    func updateEleve(eleveDic) createNewEleve    func createNewEleve(eleveDic) getEleveById    func getEleveById(idEleve) deleteEleve    func deleteEleve(idEleve) eraseEleveRaw    func eraseEleveRaw(idEleve) "},{"id":12,"href":"/eleves/","title":"Eleves","parent":"Documentation Carnet-de-Bord","content":""},{"id":13,"href":"/classes/gAjoPC/","title":"gAjoPC","parent":"Classes","content":"Extends: PanelContainer\nDescription    class du container d\u0026rsquo;ajout de groupes\nProperty Descriptions    groupeModel    var groupeModel Method Descriptions    editPageTitle    func editPageTitle() fillGroupeForm    func fillGroupeForm(idGroupe) fillNomGroupe    func fillNomGroupe(nomGroupe) fillIdGroupe    func fillIdGroupe(idGroupe) displayDeleteButton    func displayDeleteButton() "},{"id":14,"href":"/Global/Global/","title":"Global","parent":"Globals","content":"Extends: Node\nDescription    Property Descriptions    data    var data MAX_NOM    var MAX_NOM MAX_CHAR_GRLL    var MAX_CHAR_GRLL taille maximale du nombre de caractères dans une ligne de la liste de grilles\neleveEditPage    var eleveEditPage groupeEditPage    var groupeEditPage allReferentiel    var allReferentiel domainByRefId    var domainByRefId competenceByDomainId    var competenceByDomainId grilleEditPage    var grilleEditPage dictionnaire qui contient tous les attributs utiles à la scène créer/modifier une grille\n"},{"id":15,"href":"/Global/GlobalHelper/","title":"GlobalHelper","parent":"Globals","content":"Extends: Node\nDescription    fonctions communes utilisés partout dans tout le code\nProperty Descriptions    domaineModel    var domaineModel competenceModel    var competenceModel referentielModel    var referentielModel Method Descriptions    fillQuestionText    func fillQuestionText(qstText, questionNode) mergeDic    func mergeDic(dicOne, dicTwo) ajoute le dictionnaire 2 donné en paramètre au dictionnaire 1 donné en paramètre\nprepareInString    func prepareInString(valuesArray) prépare une chaîne de charactère SQL du IN qui contient une liste de valeurs donnés en paramètre\nfillReferentielOptionButton    func fillReferentielOptionButton(refOptionsNode, idRef: int = 0) remplit la selectbox intitulé \u0026ldquo;Référentiel\u0026rdquo; depuis la base de donnée et sélectionne le réferentiel passé en argument\ngetAllReferentiel    func getAllReferentiel() fillDomainAndCompetance    func fillDomainAndCompetance(refId, domainOptionsNode, competenceOptionsNode, domainId: int = 0, competenceIdArray: Array = 0) remplit les selectbox Domaines et Compétences à partir de la base de donnée\ngetDomaineByRefId    func getDomaineByRefId(refId) fillManyCompetence    func fillManyCompetence(idDomain, multiCompetenceNode, competenceIdArray: Array = 0) remplit les selectbox intitulés \u0026ldquo;Compétences\u0026rdquo; depuis la base de donnée et sélectionne les compétences passés en argument\ngetCompetenceArrayByDomainId    func getCompetenceArrayByDomainId(idDomain) createMultiCompetence    func createMultiCompetence(parentNode, childNumber) duplique la scène qui contient une ligne de compétence = selectbox + button (+/-)\nremoveAllChildren    func removeAllChildren(nodeObject) supprime les enfants d\u0026rsquo;un noeud donné\nfillCompetanceOptionButton    func fillCompetanceOptionButton(competanceArray, competenceOptionsNode, competenceId: int = 0) remplit la selectbox intitulé \u0026ldquo;Compétences\u0026rdquo; depuis la base de donnée et sélectionne la compétence passée en argument\nfillDomaineOptionButton    func fillDomaineOptionButton(domaineArray, domainOptionsNode, domainId: int = 0) remplit la selectbox intitulé \u0026ldquo;Domaine\u0026rdquo; depuis la base de donnée et sélectionne le domaine passé en argument\nsetChildrenNumber    func setChildrenNumber(parentNode) numérote toutes les questions du formulaire de création/modification d\u0026rsquo;une grille\nsetQuestionNumber    func setQuestionNumber(node, number) attribue un numéro à une question du formulaire de création/modification d\u0026rsquo;une grille\ndisplayForm    func displayForm(formData) met en couleur les champs requis d\u0026rsquo;un formulaire\nhighlightWrongField    func highlightWrongField(pathArray) met en couleur les champs erronnés\naddRedBorder    func addRedBorder(nodeObject) ajoute une bordure rouge\naddRedBorderToNormalStyle    func addRedBorderToNormalStyle(nodeObject) ajoute une bordure rouge au style normal\nprepareText    func prepareText(textString, maxChar: int = 0) duplicateFirstChild    func duplicateFirstChild(size, parentNode, hideZero: bool = true) multiplie ou cache le premier noeud enfant du noeud parent donné en argument, un nombre de fois donné en argument\n"},{"id":16,"href":"/global/","title":"Globals","parent":"Documentation Carnet-de-Bord","content":""},{"id":17,"href":"/Grilles/GriCLRLTextB/","title":"GriCLRLTextB","parent":"Grilles","content":"Extends: Button\nDescription    gère l\u0026rsquo;action clique sur le nom de la grille\n"},{"id":18,"href":"/Grilles/GriFMiddleB/","title":"GriFMiddleB","parent":"Grilles","content":"Extends: Button\nDescription    "},{"id":19,"href":"/data-Models/GrilleModel/","title":"GrilleModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table GRILLE category: Model\nMethod Descriptions    getGrilleById    func getGrilleById(idGrille) récupère le nom de la grille par idGrille passé en argument\ngetGrilleList    func getGrilleList() récupère la liste des grilles avec leur référentiel associé\ngetGrilleWithoutQuestion    func getGrilleWithoutQuestion(grillIdWithQuestion) récupère les grilles qui n\u0026rsquo;ont pas de questions\ntransformGrille    func transformGrille(grilleArray) prepareGrilleList    func prepareGrilleList(grilleRefLinkArray) construit la liste de grille à partir des données du résultat de la requête qui lie la grille aux référentiels\ninsertUniqueValueInArray    func insertUniqueValueInArray(desArray, value) insère une valeur dans un tableau seulement si celle-ci n\u0026rsquo;est déjà pas présente\ninitializeGrlRefRaw    func initializeGrlRefRaw(dic, field) initialise le champ passé en argument, du dictionnaire passé en argument avec la structure ligne de la liste de grille\nnvEtDscToString    func nvEtDscToString(grilleList) transforme les tableaux niveaux et disciplines en chaîne de caractère pour chaque élément dans la liste des grilles donnés en paramètre\narrayToString    func arrayToString(givenArray) transforme les valeurs d\u0026rsquo;un tableau en une chaîne de caractère séparé par une virgule\nsaveGrille    func saveGrille(grilleDic) crée ou modifie la grille donné en paramètre\nupdateGrille    func updateGrille(grilleDic) updateGrilleRaw    func updateGrilleRaw(grilleDic) createGrille    func createGrille(grilleDic) crée une nouvelle grille et relie les questions et les compétences passé en argument\ninsertGrilleRaw    func insertGrilleRaw(grilleDic) insère une nouvelle ligne dans la table GRILLE de la base de donnée\n"},{"id":20,"href":"/grilles/","title":"Grilles","parent":"Documentation Carnet-de-Bord","content":""},{"id":21,"href":"/Grilles/GrlAjoCFMultiSelectOB/","title":"GrlAjoCFMultiSelectOB","parent":"Grilles","content":"Extends: OptionButton\nDescription    gère l\u0026rsquo;action de selection d\u0026rsquo;un référentiel dans le formulaire créer/modifier une grille\nProperty Descriptions    domaineModel    var domaineModel "},{"id":22,"href":"/Grilles/GrlAjoCFQAddB/","title":"GrlAjoCFQAddB","parent":"Grilles","content":"Extends: Button\nDescription    gérer le bouton d\u0026rsquo;ajout de question\nMethod Descriptions    duplicateQuestionScene    func duplicateQuestionScene(toDuplicateNode) duplique la scène parente du formulaire de question\ngetCompetenceArray    func getCompetenceArray(toDuplicateNode) récupère le ou les id des compétences sélectionnés de la question à dupliquer\n"},{"id":23,"href":"/Grilles/GrlAjoCFQSDomainOB/","title":"GrlAjoCFQSDomainOB","parent":"Grilles","content":"Extends: OptionButton\nDescription    gère l\u0026rsquo;action de selection d\u0026rsquo;un référentiel dans le formulaire créer/mmodifier une grille\n"},{"id":24,"href":"/Grilles/GrlAjoCFSaveB/","title":"GrlAjoCFSaveB","parent":"Grilles","content":"Extends: Button\nDescription    gère le bouton \u0026ldquo;Enregistrer grille\u0026rdquo;\nProperty Descriptions    grilleModel    var grilleModel formNode    var formNode grilleForm    var grilleForm Method Descriptions    getGrilleDic    func getGrilleDic() collecte la structure de donnée grille à partir du formulaire de grille\ngetGrilleQuestions    func getGrilleQuestions() récupère un tableau des questions à partir du formulaire grille\ngetQuestionDic    func getQuestionDic(questionNode) récupère la structure de donnée d\u0026rsquo;une question\ngetCompetenceIds    func getCompetenceIds(questionNode) récupère les compétences d\u0026rsquo;une question\ngetIdCompetence    func getIdCompetence(competenceRaw) récupère et valide competenceId\ngetQuestionDomainlId    func getQuestionDomainlId(questionNode) récupère et valide le DomainId d\u0026rsquo;une question\ngetQuestionReferentielId    func getQuestionReferentielId(questionNode) récupère et valide le ReferentielId d\u0026rsquo;une question\ngetQuestionText    func getQuestionText(questionNode) récupère et valide l\u0026rsquo;intitulé de la question\ngetQuestionId    func getQuestionId(questionNode) récupère QuestionId\ngetGrilleId    func getGrilleId() récupère GrilleId\ngetGrilleName    func getGrilleName() récupère et valide le nom de la grille\n"},{"id":25,"href":"/Grilles/GrlAjoPC/","title":"GrlAjoPC","parent":"Grilles","content":"Extends: PanelContainer\nDescription    gère la page d\u0026rsquo;ajout et de modification d\u0026rsquo;une grille\nProperty Descriptions    grilleModel    var grilleModel pivotGrlQstModel    var pivotGrlQstModel Method Descriptions    fillGrilleForm    func fillGrilleForm(idGrille) remplit le formulaire de modiication d\u0026rsquo;une grille donnée en argument\nremoveLoadedQuestionNode    func removeLoadedQuestionNode(qstFormNode) supprime le formulaire d\u0026rsquo;ajout de question\nfillQuestions    func fillQuestions(questionArray, qstFormNode) remplit les questions dans le formulaire récupérée de la base de donnée\nfillQuestionId    func fillQuestionId(qstId, questionNode) remplit QuestionId dans un champ caché\nfillGrilleName    func fillGrilleName(grilleName) remplit le champ nom de la grille passé en argument\nfillIdGrille    func fillIdGrille(idGrille) remplit le champ idGrille\neditPageTitle    func editPageTitle() change le titre de la page de création de grille en titre de modification de grille\ndisplayDeleteButton    func displayDeleteButton() display le bouton \u0026ldquo;supprimer grille\u0026rdquo;\n"},{"id":26,"href":"/Grilles/GrlCLVBC/","title":"GrlCLVBC","parent":"Grilles","content":"Extends: VBoxContainer\nDescription    gère la liste des grilles\nProperty Descriptions    grilleModel    var grilleModel Method Descriptions    fillGrilleRaws    func fillGrilleRaws(grilleDic) remplit les lignes de la liste de grilles\nfillGrilleNiveau    func fillGrilleNiveau(rawNode, niveauText) remplit la colonne niveau de la ligne liste des grilles\nfillGrilleDiscipline    func fillGrilleDiscipline(rawNode, disciplineText) remplit la colonne discipline de la ligne liste des grilles\nfilGrilleName    func filGrilleName(rawNode, nameText) remplit le nom de la grille\nfillButtonText    func fillButtonText(buttonNode, buttonText) ajoute un texte à un bouton selon la longueur du texte\nfillGrilleId    func fillGrilleId(rawNode, idText) remplit grilleId\n"},{"id":27,"href":"/classes/groCLVBC/","title":"groCLVBC","parent":"Classes","content":"Extends: VBoxContainer\nDescription    gère l\u0026rsquo;affichage de la liste des groupes\nProperty Descriptions    groupeModel    var groupeModel Method Descriptions    fillRawData    func fillRawData(groupesArray) fillGoupeName    func fillGoupeName(rawNode, name) fillId    func fillId(rawNode, id) "},{"id":28,"href":"/data-Models/groupeModel/","title":"groupeModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table GROUPE\nMethod Descriptions    getGroupList    func getGroupList() recuperer tout les groupes\ninsertGroupe    func insertGroupe(groupeDic) createNewGroupe    func createNewGroupe(groupeDic) updateGroupe    func updateGroupe(groupeDic) getGroupeById    func getGroupeById(idGroupe) deleteGroupe    func deleteGroupe(idGroupe) "},{"id":29,"href":"/data-Models/PivotGrilleQuestionModel/","title":"PivotGrilleQuestionModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access model de la table GRILLE_QUESTION_PIVOT\nMethod Descriptions    getQuestionWithCompetenceByGrilleId    func getQuestionWithCompetenceByGrilleId(idGrille) récupère toutes les questions de la grille donné en paramètre\ntransformQuestionCompetence    func transformQuestionCompetence(qstWithCmpArray) contruit la struction de donnée la rubrique question\ninitializeQstDic    func initializeQstDic(qstDic, qstId) intialise la structure de donnée \u0026ldquo;question\u0026rdquo;\ngetGrilleReferentieLinked    func getGrilleReferentieLinked() récupère les données qui lient la grille aux réferentiels, en passant par les questions\nlinkGrilleToManyQuestion    func linkGrilleToManyQuestion(idGrille, questionIdArray) insertManyRaws    func insertManyRaws(rawsArray) prepareRawByGrille    func prepareRawByGrille(idGrille, questionIdArray) flashLinkByGrilleId    func flashLinkByGrilleId(idGrille) "},{"id":30,"href":"/data-Models/PivotQuestionCompetenceModel/","title":"PivotQuestionCompetenceModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table QUESTION_COMPETENCE_PIVOT\nMethod Descriptions    linkQuestionToManyCompetence    func linkQuestionToManyCompetence(idQuestion, competenceArray) lie une question à plusieurs compétences\ninsertManyRaws    func insertManyRaws(rawsArray) insère plusieurs lignes dans la table QUESTION_COMPETENCE_PIVOT\nflashLinkByQuestionId    func flashLinkByQuestionId(idQuestion) supprime tous les liens de compétences de QuestionId donné en argument\nprepareRawByQuestion    func prepareRawByQuestion(idQuestion, competenceArray) prépare plusieurs lignes à insérer dans la table QUESTION_COMPETENCE_PIVOT\n"},{"id":31,"href":"/data-Models/QuestionModel/","title":"QuestionModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table QUESTION\nMethod Descriptions    saveManyQuestion    func saveManyQuestion(questionArray, idGrille) sauvergarde plusieurs questions et les lie à la grille passé en argument\nsaveQuestion    func saveQuestion(questionDic) crée et met à jour une question\nupdateQuestion    func updateQuestion(questionDic) updateQuestionRaw    func updateQuestionRaw(questionDic) createQuestion    func createQuestion(questionDic) crée et lie une question aux compétences associées\ninsertQuestionRaw    func insertQuestionRaw(questionDic) insère une nouvelle ligne dans la table QUESTION\n"},{"id":32,"href":"/data-Models/ReferentielModel/","title":"ReferentielModel","parent":"Data Models","content":"Extends: baseModel \u0026lt; Data \u0026lt; Node\nDescription    data access object de la table REFERENTIEL\nMethod Descriptions    getAllReferentiel    func getAllReferentiel() récupére tous les référentiels de la table REFERENTIEL\nprepareName    func prepareName(refArray) crée le nom du référentiel, ce nom est composé de Discipline et Niveau\n"},{"id":33,"href":"/categories/","title":"Categories","parent":"Documentation Carnet-de-Bord","content":""},{"id":34,"href":"/tags/","title":"Tags","parent":"Documentation Carnet-de-Bord","content":""}]